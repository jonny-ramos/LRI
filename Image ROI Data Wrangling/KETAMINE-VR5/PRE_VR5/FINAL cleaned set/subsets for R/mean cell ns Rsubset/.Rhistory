# performs 2way ANOVA (2 by 2, react by treat)
# performs post hoc pairwise comparisons (emmeans of levels of react by treat
# and emmeans of levels of treat by react)
# prints out all statistical test results and returns plot objects
# for the two plots: the qqplots and the box plots
#
# Jonathan Ramos 3/12/2024
{
df <- read.csv(fname, header=TRUE, sep=",")
df$react_treat_factor <- as.factor(df$react_treat)
df$react_factor <- as.factor(df$react)
df$treat_factor <- as.factor(df$treat)
### check assumption of normality
# quantitative assessment
print(tapply(df$mean_cell_n, df$react_treat_factor, shapiro.test))
# qualitative assessment
g <- ggqqplot(df, x="mean_cell_n", facet.by=c("treat_factor", "react_factor"))
### check assumption of equal variances
# quantitative assessment
print(leveneTest(y = df$mean_cell_n, group=df$react_treat_factor, center='mean'))
# qualitative assessment
f <- ggplot(df, aes(x=treat_factor, y=mean_cell_n)) + geom_boxplot(aes(fill=treat_factor), alpha=0.5) +
#geom_dotplot(binaxis = "y", stackdir = "center", dotsize=0.5) +
facet_wrap(~react_factor) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# run the ANOVA, display summary
df.lm <- lm(mean_cell_n ~ treat_factor + react_factor + treat_factor*react_factor, contrasts=list(treat_factor='contr.sum', react_factor ='contr.sum'), data=df)
df.III.aov <- car::Anova(df.lm, type = 3)
print(df.III.aov)
# post hoc pairwise comparisons
emm <- emmeans(df.lm, ~ treat_factor * react_factor)
p1 <- pairs(emm, simple="treat_factor", adjust="tukey")
p2 <- pairs(emm, simple="react_factor", adjust="tukey")
# add col to summary dataframe containing sidak adjusted p-values
adjusted_p.value1 <- Sidak(summary(p1, adjust="tukey")$p.value)
s1 <- summary(p1)
s1['adjusted_p.value'] <- adjusted_p.value1
adjusted_p.value2 <- Sidak(summary(p2, adjust="tukey")$p.value)
s2 <- summary(p2)
s2['adjusted_p.value'] <- adjusted_p.value2
# display results
print(s1)
print(s2)
return(list(g, f))
}
singles = list.files(pattern="KET-VR5_single")
quads = list.files(pattern="KET-VR5_quad")
pv = list.files(pattern="PV_coloc")
cfos = list.files(pattern="cFos_coloc")
npas4 = list.files(pattern="Npas4_coloc")
wfa = list.files(pattern="WFA_coloc")
fname = singles[1]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = singles[2]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = singles[3]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = singles[4]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = pv[1]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = pv[2]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = pv[3]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = pv[4]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = pv[5]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = pv[6]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = cfos[1]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = cfos[2]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = cfos[3]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = cfos[4]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = cfos[5]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = cfos[6]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = npas4[1]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = npas4[2]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = npas4[3]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = npas4[4]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = npas4[5]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = npas4[6]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = wfa[1]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = wfa[2]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = wfa[3]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = wfa[4]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = wfa[5]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = wfa[6]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = quads[1]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = quads[2]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = quads[3]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
fname = quads[4]
print(fname)
figs = eda_anova(fname)
# display qq plot to assess normality
figs[[1]]
# display box plot to assess homogeneity of variances
figs[[2]]
print(fname)
library(ggplot2)
library(ggpubr)
library(car) # For levene.test() function
library(emmeans)
Sidak <- function(pvals)
# takes a vector of p-values and corrects p-values according to
# Sidaks method for multiple comparisons (1967)
#
# Jonathan Ramos 3/12/2024
{
adjusted <- c()
j <- length(pvals)
for (i in 1:j){
adj_p <- 1-(1-pvals[i])^j
adjusted <- c(adjusted, adj_p)
}
return(adjusted)
}
eda_anova <- function(fname)
# takes a filname, loads data from csv; data 4 columns:
# react_treat, react, treat, and mean_cell_n (response var)
# react_treat is just react and treat in one string separated by "_"
# builds factor cols for categorical cols (mean_cell_n is numeric, all others are categorical)
# then performs the following tasks:
# checks assumptions of normality with qqplot and shapiro wilk tests
# checks assumptions of equal variances with box plot and levene test
# performs 2way ANOVA (2 by 2, react by treat)
# performs post hoc pairwise comparisons (emmeans of levels of react by treat
# and emmeans of levels of treat by react)
# prints out all statistical test results and returns plot objects
# for the two plots: the qqplots and the box plots
#
# Jonathan Ramos 3/12/2024
{
df <- read.csv(fname, header=TRUE, sep=",")
df$react_treat_factor <- as.factor(df$react_treat)
df$react_factor <- as.factor(df$react)
df$treat_factor <- as.factor(df$treat)
### check assumption of normality
# quantitative assessment
# print(tapply(df$mean_cell_n, df$react_treat_factor, shapiro.test))
# qualitative assessment
g <- ggqqplot(df, x="mean_cell_n", facet.by=c("treat_factor", "react_factor"))
### check assumption of equal variances
# quantitative assessment
# print(leveneTest(y = df$mean_cell_n, group=df$react_treat_factor, center='mean'))
# qualitative assessment
f <- ggplot(df, aes(x=treat_factor, y=mean_cell_n)) + geom_boxplot(aes(fill=treat_factor), alpha=0.5) +
#geom_dotplot(binaxis = "y", stackdir = "center", dotsize=0.5) +
facet_wrap(~react_factor) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# run the ANOVA, display summary
df.lm <- lm(mean_cell_n ~ treat_factor + react_factor + treat_factor*react_factor, contrasts=list(treat_factor='contr.sum', react_factor ='contr.sum'), data=df)
df.III.aov <- car::Anova(df.lm, type = 3)
print(df.III.aov)
# post hoc pairwise comparisons
emm <- emmeans(df.lm, ~ treat_factor * react_factor)
p1 <- pairs(emm, simple="treat_factor", adjust="tukey")
p2 <- pairs(emm, simple="react_factor", adjust="tukey")
# add col to summary dataframe containing sidak adjusted p-values
adjusted_p.value1 <- Sidak(summary(p1, adjust="tukey")$p.value)
s1 <- summary(p1)
s1['adjusted_p.value'] <- adjusted_p.value1
adjusted_p.value2 <- Sidak(summary(p2, adjust="tukey")$p.value)
s2 <- summary(p2)
s2['adjusted_p.value'] <- adjusted_p.value2
# display results
print(s1)
print(s2)
return(list(g, f))
}
singles = list.files(pattern="KET-VR5_single")
quads = list.files(pattern="KET-VR5_quad")
pv = list.files(pattern="PV_coloc")
cfos = list.files(pattern="cFos_coloc")
npas4 = list.files(pattern="Npas4_coloc")
wfa = list.files(pattern="WFA_coloc")
fname = singles[1]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = singles[2]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = singles[3]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = singles[4]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = pv[1]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = pv[2]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = pv[3]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = pv[4]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = pv[5]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = pv[6]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = cfos[1]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = cfos[2]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = cfos[3]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = cfos[4]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = cfos[5]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = cfos[6]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = npas4[1]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = npas4[2]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = npas4[3]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = npas4[4]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = npas4[5]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = npas4[6]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = wfa[1]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = wfa[2]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = wfa[3]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = wfa[4]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = wfa[5]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = wfa[6]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = quads[1]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = quads[2]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = quads[3]
print(fname)
figs = eda_anova(fname)
print(fname)
fname = quads[4]
print(fname)
figs = eda_anova(fname)
print(fname)
